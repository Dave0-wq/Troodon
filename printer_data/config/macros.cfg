#####################################################################
#   Macros
#####################################################################
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    M104 S150 T0
    M109 S150 T0
    NOZZLE_CLEAN
    QUAD_GANTRY_LEVEL
    NOZZLE_CLEAN
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X125 Y125 Z5 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

####################################
# Mesh Bed Leveling
####################################

[gcode_macro mesh_leveling]
gcode:
      G28 # Home All
      #T0
      BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic # Start probing

[gcode_macro save_mesh]
gcode:
      BED_MESH_PROFILE SAVE=mesh1
      SAVE_CONFIG
####################################

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#[gcode_macro PRINT_START]
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
#    G1 Z20 F3000                   ; move nozzle away from bed
#    NOZZLE_PRIME
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    #SET_PIN PIN=nevermore VALUE=0
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####
# COLOR CHANGE
#####
[gcode_macro M600]
description: Executes a color change by pausing the printer an unloading the filament.
gcode:
  PAUSE
  UNLOAD_FILAMENT
  M117 Please load new filament and resume
  RESPOND MSG="Please load new filament and resume"

#####
# FILAMENT MANAGEMENT
#####

[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  # Extract filament to cold end area 
  G0 E-5 F3600
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E5 F3600
  # Extract back fast in to the cold zone 
  G0 E-15 F3600
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-130 F300
  M117 Filament unloaded!
  RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G0 E100 F600
  # Wait a secod
  G4 P1000
  # Purge
  G0 E40 F100
  # Wait for purge to complete
  M400e
  M117 Filament loaded!
  RESPOND MSG="Filament loaded!"
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro NOZZLE_CLEAN]
description: wipes nozzle on brush to clean it
gcode:
  G90
  G1 X148 Y255 F6000
  G1 Z0.5 F3000
  G1 X105 Y255 F10000
  G1 X148 Y255 F10000
  G1 X105 Y255 F10000
  G1 X148 Y255 F10000
  G1 X105 Y255 F10000
  G1 X148 Y255 F10000
  G1 Z5 F6000

[gcode_macro NOZZLE_PRIME]
description: prime the nozzle before printing
gcode:
  G92 E0
  G1 E-3 F1800
  G1 X0 Y0 F10000
  G1 Z0.3 F500
  G92 E0
  G1 E3 F500
  G92 E0
  G1 E-0.30000 F3600
  G1 Z0.2500 F1000
  G1 X250 Y0 E50 F1000 
  G92 E0
  G1 E-0.30000 F5400
  G1 Z10 F500

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESONANCES_TEST]
gcode:
      SHAPER_CALIBRATE

#######################################
# START_PRINT
#######################################

[gcode_macro START_PRINT]
gcode: 
      G28  # Home the printer 
      G92 E0  # Reset extruder 
      G32
      #BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic
      BED_MESH_PROFILE LOAD=mesh1

     # Move to wait position 
      #G28 X
      G90
      G1 X175 Y175   


#######################################
# END_PRINT
#######################################

[gcode_macro END_PRINT]
#variable_machine_depth: printer.configfile.settings.stepper_z.position_max
gcode:
    ; layer end
     G91  ;relative positioning
     G1 E-5.00 F1000  ;retract 5mm of filament
     G1 Z+1.00 X+20.0 Y+20.0 F20000  ;short quick move to disengage from print
     G1 Z+10.00  F20000  ;move Z-Axis 10mm away from part
     G90  ;absolute positioning
     G28 X0 Y0  ; move gantry close to home
     G91  ; relative positioning
     G1 E-5.00 F500  ;retract additional filament to prevent oozing
     G90 ;absolute positioning
     M104 S0  ;turn off hotend
     M140 S0  ;turn off heatbed
     M106 S0  ; shut off blower
     M84  ;motors off
  #####################################################################
# Calibrate Prope Offset
####################################################################

[gcode_macro Calibrate_Probe_Offset]
gcode:
      PROBE_CALIBRATE

####################################################################

#[mcu adxl]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_MELLOW-if00
### 查询usb固件id是：ls -l /dev/serial/by-id/
### 把/dev/serial/by-id/usb-Klipper_rp2040_XXXXXXXXXXXXXXXXXXXXX替换查询到的id

#[adxl345]
#cs_pin: adxl:gpio9
#spi_software_sclk_pin: adxl:gpio10
#spi_software_mosi_pin: adxl:gpio11
#spi_software_miso_pin: adxl:gpio12

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125, 125, 20







#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)
## Beacon Contact logic (if you have one. 4 lines at 4 locations)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Beacon contact (2 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=1                     # Calibrate z offset and beacon model

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  #STATUS_LEVELING                                      # Set LEDs to leveling-mode
  #Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  #G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  ADAPTIVE=1
  
  ## Uncomment for Beacon Contact (3 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=0                     # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  ##   Uncomment for Beacon Contact (4 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0.06                              # Add a little offset for hotend thermal expansion

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position